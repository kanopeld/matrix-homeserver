version: "3.3"

services:
    proxy:
        image: "jwilder/nginx-proxy"
        restart: "always"
        user: "${UID}:${GID}"
        volumes:
            - "certs:/etc/nginx/certs"
            - "vhost:/etc/nginx/vhost.d"
            - "html:/usr/share/nginx/html"
            - "/run/docker.sock:/tmp/docker.sock:ro"
        ports:
            - "80:80"
            - "443:443"
        networks: ["server"]

    letsencrypt:
        image: "jrcs/letsencrypt-nginx-proxy-companion"
        restart: "always"
        user: "${UID}:${GID}"
        volumes:
            - "certs:/etc/nginx/certs"
            - "vhost:/etc/nginx/vhost.d"
            - "html:/usr/share/nginx/html"
            - "/run/docker.sock:/var/run/docker.sock:ro"
        environment:
            NGINX_PROXY_CONTAINER: "proxy"
        networks: ["server"]
        depends_on:
            - proxy

    postgresql:
        image: "postgres:latest"
        restart: always
        user: "${UID}:${GID}"
        ports:
            - "5432:5432"
        volumes:
            - "postgresdata:/var/lib/postgresql/"
        env_file:
            - ".env"
        networks: ["server"]

    postfix:
        image: "danilsmirnov/postfix:latest"
        restart: "always"
        user: "${UID}:${GID}"
#        volumes:
#            - "/path/to/certs:/etc/postfix/certs"
#            - "/path/to/script:/configure.sh"
#        ports:
#            - "25:25"
#            - "587:587" #ssl
        env_file:
            -   ".env"

    synapse:
        image: "matrixdotorg/synapse:latest"
        restart: "always"
        user: "${UID}:${GID}"
        volumes:
            - "./synapse:/data"
            - "./data/media_store:/media"
            - "./data/logs:/logs"
        env_file:
            - ".env"
        networks: ["server"]
        depends_on:
            - postgresql
            - proxy
            - letsencrypt
        
    telegram-bridge:
        image: "dock.mau.dev/mautrix/telegram:latest"
        restart: "always"
        user: "${UID}:${GID}"
        ports:
            - "29317:29317"
        volumes:
            - "./mautrix-telegram:/data"
        networks: ["server"]
        depends_on:
            - postgresql
            - synapse

    instagram-bridge:
        image: "dock.mau.dev/mautrix/instagram:latest"
        restart: "always"
        user: "${UID}:${GID}"
        volumes:
            - "./mautrix-instagram:/data"
        networks: ["server"]
        depends_on:
            - postgresql
            - synapse

    whatsapp-bridge:
        image: "dock.mau.dev/mautrix/whatsapp:latest"
        restart: "always"
        user: "${UID}:${GID}"
        volumes:
            - "./mautrix-whatsapp:/data"
        networks: ["server"]
        depends_on:
            - postgresql
            - synapse

    mattermost-bridge:
        build:
            context: ./mattermost-bridge
            dockerfile: Dockerfile
        container_name: mattermost-bridge
        restart: "always"
        user: "${UID}:${GID}"
        volumes:
            - "./mattermost-bridge:/data"
        networks: [ "server" ]
        depends_on:
            - postgresql
            - synapse

volumes:
    postgresdata:
    certs:
    vhost:
    html:

networks:
    server:
        external: true
